#!/bin/bash -e

# Read arguments and make some assignments:
[ $# -gt 2 ] && echo "Usage: make_sites <CpHMD settings file> <pdb file>" >&2 && exit 1
if [ ! -f $1 ]; then
    echo "File $1 is missing!!!... Program will crash"; exit 1;
fi

message ()
{
    case "$1" in
        E ) shift; echo -e "$prog: Error: $*" >&2; exit 1;;
        U ) shift; echo -e "$prog: Warning: $*\n$usage" >&2; exit 1;;
        W ) shift; echo -e "$prog: Warning: $*" >&2;;
        * ) message E "Wrong use of 'message' function.";;
    esac
}

source $1

### Set standard files if no CpHDIR or STDIR given ###
if [ -z  ${CpHDIR} ] ;then
    CpHDIR="/home/noliveira/CpHMD/CpHMD_v3.0/"
fi
if [ -z  ${StDIR} ] ;then
    StDIR="/home/noliveira/CpHMD/CpHMD_v3.0/St-54a7_Fit_DelPHi/"
fi


## remove .sites if exists ##
rm -rf ./${SysName}.sites

#at this point we have the TMP_protein.pdb which is the pdb with only the titrable
#portion of our molecules!
if [[ $sites == *(" ") ]]; then
    echo "" >> ./${SysName}.sites
elif [[ $sites == "all"* ]]; then

    # Declare an associative array
    declare -A s

    # Process each line of the command's output
    n=0
    while read -r line; do
	if [[ $line != *#* ]] ;then
	   key=$n  #$(echo "$line" | awk -F'=' '{print $1}' | sed -e 's/.*s\[//g' -e 's/]//g')
	   #value=$(echo "$line" | awk -F'=' '{print $2}' | sed 's/[" ]//g')
	   value=$(echo "$line" | awk -F'=' '{print substr($2,2,3)}' )
	   s["$key"]=$value

	   ((++n))
	fi
	   
    done < <(awk '/s\["/ && $1!="#" {print}' $CpHDIR/scripts/pdbswitch | sed -e 's/;/\n/g' -e 's/ *//g' | sort -u) 

    
    list=`awk '/ATOM/ {if (substr($0,20,1) ~ /^[0-9]/) {print substr($0,23,5)+0, substr($0,18,3) }}' $2 | uniq `
    while read line ;do
	ind=`echo $line | awk '{print $1}'`
	res=`echo $line | awk '{print $2}'`
	echo $line
	case "${s[*]}" in
	    *"$res"* ) 	
	    stname=`awk -v n=$res '/#res/ && $0~n {print $NF}' $CpHDIR/scripts/pdbswitch ` 
	    if [[ $stname != "ARG" ]] ;then
		if  [[ ! -z `ls -a $StDIR | grep $stname ` ]] ;then
		    tau=`ls -a $StDIR | grep $stname | sed -e 's/.st//' | awk 1 ORS=" "`
		    awk -v i="$ind" -v t="$tau" 'BEGIN{printf("%-5s%s\n",i,t)}' >> ./${SysName}.sites
		else
		    message E  "Residue $ind $res not present in STs."
		fi
	    fi ;;
	esac
	
    done <<< $list
   
        
    if [[ `echo $sites | awk '{print NF}'` > 1  ]];then
	for ndx in `echo $sites | awk '{$1="";print}'`;do
	    if [[ $ndx = *N ]];then
		ind=`echo $ndx | sed 's/N//'`
		res="NTR"
    		stname="NTR"
	    elif [[ $ndx = *C ]];then
		ind=`echo $ndx | sed 's/C//'`
		res="CTR"
		stname="CTR"
	    else
		message E  "Residue $ind $res not a terminal"
	    fi
	    
	    if [[ ! -z `ls -a $StDIR | grep $stname ` ]];then
		echo $stname 
		tau=`ls -a $StDIR | grep $stname | sed -e 's/.st//' | awk 1 ORS=" "`
		echo $tau
		awk -v i="$ind" -v t="$tau" 'BEGIN{printf("%-5s%s\n",i,t)}' >> ./${SysName}.sites
	    else
		message E  "Residue $ind $res not present in STs."
	    fi		    
	done
    fi
    
    sort -nk 1 ./${SysName}.sites
        
else    
    for ndx in $sites;do
	if [[ $ndx = *N ]];then
	    ind=`echo $ndx | sed 's/N//'`
	    res="NTR"
    	    stname="NTR"
	elif [[ $ndx = *C ]];then
	    ind=`echo $ndx | sed 's/C//'`
	    res="CTR"
	    stname="CTR"
	else
	    ind=$ndx
	    res=`awk -v i=$ndx 'substr($0,23,5)+0==i && substr($0,18,3)!="SOL" {a=substr($0,18,3)}END{print a}' $2`
	    stname=`awk -v n=$res '/#res/ && $0~n {print $NF}' $CpHDIR/scripts/pdbswitch `
	fi
	#replace the case with pdbswitch search 
	
	if [[ ! -z `ls -a $StDIR | grep $stname ` ]]
	then
	    tau=`ls -a $StDIR | grep $stname | sed -e 's/.st//' | awk 1 ORS=" "`
	    awk -v i="$ind" -v t="$tau" 'BEGIN{printf("%-5s%s\n",i,t)}'  >> ./${SysName}.sites
	else
	    message E  "Residue $ind $res not present in STs."
	fi
    done
fi

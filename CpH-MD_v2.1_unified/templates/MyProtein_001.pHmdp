#
# --      This is the parameters file for Constant-pH MD package         --
#
# -- This file should be named as "System Name"_"Block Identifier".pHmdp --
# --         Please keep the "_" character as the separator.             --
#
# --    General parameters appear first and Block specific parameters    --
# --    appear in the end. Please edit according to your needs.          --
#
#
# Define your working module:
#
# protein   -> Normal Constant-pH MD simulation with tautomers
# redox     -> Inclusion of redox titration (DVH c3 heme support)
# dendrimer -> Constant-pH MD simulation of peptidic dendrimers
# delphi    -> Constant-pH MD simulation of several solutes with PBC
#
export CpHModule=protein
#
#
# Force field to be used - available are:
#
#   G54a7pHt --> GROMOS 53a6 with tautomers, redox groups, lipids and dendrimers
#
export ffID=G54a7pHt
#
#
# -- Simulation Parameters --
#
# Extra flag to force the CpHMD machinery to recognize 
# multiple solutes
export fixgro=1
#
# Solution pH
export pH=7.0
#
# Temperature (Kelvin)
export temp=310.0
#
# Ionic Strength (moles/litre)
export ionicstr=0.1
#
# Ionic Strength MD segment (moles/litre)
export ionicstrMD=0.1
#
# Dielectric constant of molecular interior
export epsin=2.0
#
# Dielectric constant of the solvent 
export epssol=80.0 
#
# Monte Carlo seed used in program petit.
# It can be used to generate different replicates.
export seed=1234567
#
# Protein Dimension for MEAD (use "0" if you have your own .ogm & .mgm
# files or you are using the delphi module with Delphi)
export GridSize=81
#
# Residue number OffSet to correct bug in MEAD 
# (the value should be at least twice the max # res. in the protein)
# A value of 0 (zero) bypasses this correction and allows MEAD to use
# the whole residue as the titration site. In this case, .st files
# with pKmod values from Tanford should be used.
export offset=1000
#
# N-terminus and C-terminus conditions: CAP=capped ; CAPpro=capped 
# proline residue ; CHG=charged ; NEU=Neutral ; TAU1=tautomer1 ;
# TAU2=tautomer2 ; TAU3=tautomer3 ; TAU4=tautomer4 ; REGN=regular 
# neutral ; REGC=regular charged - when titrating (in the .sites file), 
# these settings are bypassed
# (see table in README for more information about tautomers)
export Nterminus=CHG
export Cterminus=CHG
#In the case of several chains write instead
#export Nterminus=(CHG CHG)
#export Cterminus=(CHG CHG)
# 
# Reduced Titration Threshold (0 will use all sites)
export RTThreshold=0.001
#
# Reduced Titration Frequency (in # of cycles)
export RTFrequency=50
#
# Solvent relaxation time in steps 
# E.g. 0.2 ps with a 2 fs timestep -> RelaxSteps=100
export RelaxSteps=100
#
# Effective time in steps (real protein simulation time)
# E.g. 1 ps with a 2 fs timestep -> EffectiveSteps=500
export EffectiveSteps=1000
#
#The name of the first solvent appearing in the input
#gro file (GROin). It separates the solvent block that will 
#be relaxed after solvent relaxation. 
export SOL1st="SOL"
#
# -- Input Directories Location --
#
# The following Programs have to be downloaded and installed
# in your cluster in order to use the Constant-pH MD package
#
# Path to your CpHMD distribution
export CpHDIR="/programs/CpH-MD/CpH-MD_v2.03"
#
# Path to your StDIR 
# (the "_Fit" files should be used together with the "offset"
# correction. The older .st work when the offset is bypassed)
export StDIR="/programs/meadTools2.0.1/st-G54a7_Fit_CpHMD"
#
# Path to your GROMACS Binaries - This version of the code 
# only works with version 4.0.7 (for external Ionic strength 
# use our modified code)
export GroDIR="/programs/gromacs/gromacs-4.0.7_pH_I/bin"
#
# Path to MEAD Binaries (Tested with versions 2.2.{0,5,8a,9})
# Version 2.2.{8a,9} are ~20% faster than previous.
export MeadDIR="/programs/MEAD-2.2.9/bin"
#
# Path to meadTools1.5
export MToolsDIR="/programs/meadTools2.0.1"
#
# Path to DELPHI executables (delphi version 5) 
# This version was compiled with pgf90 from portland group. 
# gcc can be used but some functionalities may not work,
# like focus or Acenter.
export DelphiDir="/programs/DelphiTools_v1.3"
#
# Path to PETIT
export PetitDIR="/programs/petit1.6.1"
#
# -- Input File Location --
# 
# The topology of your system
export TOPin=MyTopology.top
#
# A pdb file of the system used to know the number of chains 
# and location of the several Nter and Cter. If this variable 
# is empty, the number of chains is considered to be just one.
export PDBin=MyStructure.pdb
#
# -- Module Specific Variables --
#
# Electrostatic potential (mV) (needed only in the redox module).
export pot=0.0
#
# The index file of your system (optional)
# The index file made by default may be a bit limited to
# your needs. In that case, you should provide your own.
# For lipid titration (delphi module) you should provide an index file 
# with the following extra entries: Onetail; Monotail and Bitail.
export NDXin=""
#
# The Rule file for fix_topology (needed in several systems). 
# Whenever present, it will be used. If not needed, leave it empty. 
export RULEin=""
#
# The Rule file for fix_dendrimer_top (needed in the dendrimer module).
# No Path required. Only the file name.
export RULEdendr=fix_dendrimer_G3.rules
#
# The POSRE file - To use position restraints, please provide a file;
# otherwise, leave it empty.
export PosRe=""
#
# Important parameters for Delphi in "delphi" module
# 
# Number of dimensions in the Poisson-Boltzmann PBC settings 
# (integer): 0, 2 or 3
# 0 stands for proteins in solution and 2 for lipid bilayers
export PBdim=2
# 
# Cutoff for background and pairwise interactions (nanometers)
export cutoff=2.5
#
# PERFIL, GRID SIZE and SCALE cannot be assigned at the same
# time. They are not independent variables.
# (for more info check the "MyProtein_XXX.pbp" file in this folder)
# export perfil=80
export gsize=81
export scaleP=1.0
export scaleM=4.0
#
# Potential at Boundary (1, 2, 3 or 4):
#     1. Potential is zero (0.0) 
#     2. Dipole. The boundary potentials are approximated by the
#        Debye-Huckel potential of the equivalent dipole to the
#        molecular charge distribution.
#     3. Focusing. 
#     4. Coulombic. They are approximated by the sum of Debye-Huckel
#        potentials of all the charges.
export bndcon=4
#
# The convergence threshold values:
# (for more info check the "MyProtein_XXX.pbp" file in this folder)
# fast: 0.01
# slow: 0.0001
export maxc=0.01
#
# A gro file with no bonds broken by PBC. This gro cannot be obtained
# simply by using TRJCONV and the "-pbc mol" flag/option. It needs to
# be done manually to circumvent the breaking of the special
# bonds. The file should contain only the solute sent to the PB
# calculation without SOL and Ions.
#  When C-ter is titrating, use the final minimization step to include
# the C-ter nomenclature correction.
export GROwhole=MyStructure.gro
#
# -- Block Specific Parameters --
#
# Define beginning of the Cycle:
export InitCycle=1
#
# Define end of the Cycle:
export EndCycle=500
#
# The initial (gro) file coming from the initiation run
# or from the previous simulation segment
export GROin=MyGROFile.gro
#
#
# -- Parallelization Parameters --
#
# Parallelization occurs in the PB part (meadT) and in the MD part (mdrun)
# Number of CPU threads/cores:
#
export nCPU=1
#
# Option "-rcon" in mdrun allows the user to "decompose" smaller systems
# in several CPUs. As an example, in a small 3k atoms system the default
# option "0" estimates a value of 1.3 nm which does not allow the use of
# more than 1 CPU. The use of a value of 1.0 nm allows the use of at 
# least 4 CPUs in that simulation.
#
export Rcon="0"
#
# Define which command should be used for respectively
# non-parallel and parallel MD runs (e.g. mdrun or mdrun_mpi)
if [ $nCPU == 1 ]; then export mdrun="$GroDIR/mdrun"
else export mdrun="mpirun -ssi rpi tcp C $GroDIR/mdrun_mpi"; fi
#
# -- End of Parameters File --
